buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'

archivesBaseName = "Clans"
version = "2.1.9+1.12.2"
group = "dev.the-fireplace"

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    replace '${version}', project.version
    mappings = "stable_39"
	
	clientRunArgs += "--uuid=0b1ec5ad-cb2a-43b7-995d-889320eb2e5b --username=The_Fireplace"
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    compile group: "net.shadowfacts", name: "Forgelin", version: "1.8.2", transitive: true
    deobfProvided "us.dynmap:DynmapCoreAPI:3.0-SNAPSHOT"
    provided ('org.spongepowered:spongeapi:7.1.0') {
        exclude module: 'org.yaml:snakeyaml:1.18'
    }
    compile("appeng:appliedenergistics2:rv6-stable-7"){
        exclude group: 'mezz.jei'
    }
    provided("vazkii.autoreglib:AutoRegLib:1.3-33.34") {
    	transitive = true
    }
    provided "vazkii.quark:Quark:r1.6-177.753"
    deobfCompile "net.ilexiconn:llibrary:1.7.9-1.12.2"
    shade 'com.electronwill.night-config:hocon:3.6.4'
}

repositories {
    jcenter()
    //Night-Config, probably others
    mavenCentral()
    // Sponge
    maven { url 'https://repo.spongepowered.org/maven' }
    // Forgelin
    maven { url "http://maven.shadowfacts.net/" }
    // Dynmap
    maven { url "http://repo.mikeprimm.com" }
    // iChunUtil, JourneyMap API, Chisels & Bits
    maven { url "https://minecraft.curseforge.com/api/maven/" }
    // Quark, AutoRegLib
    maven { url = "http://maven.blamejared.com/" }
    // LLibrary (needed for Ice and Fire)
    maven { url "https://maven.mcmoddev.com/" }
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives jar
    archives deobfJar
    archives sourceJar
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.RSA'
            exclude 'META-INF/*.MF'

            exclude '**/*.html'
        }
    }
}

if (hasProperty('curseForgeApiKey')) {
    curseforge {
        apiKey = curseForgeApiKey
        project {
            id = '313915'
            changelog = file('changelog.txt')
            releaseType = 'release'
            addGameVersion '1.12.2'
            addGameVersion 'Java 8'
            mainArtifact(new File(new File(buildDir, "libs"), "$archivesBaseName-${version}.jar")) {
                displayName = jar.archiveName.replace(".jar", "")
                relations {
                    optionalLibrary 'grand-economy'
                    optionalLibrary 'dynmapforge'
                    optionalLibrary 'chat-censor'
                }
            }
            addArtifact(sourceJar) {
                displayName = sourceJar.archiveName.replace(".jar", "")
                changelog = "*This is a file for mod developers. If you don't know what to do with it, don't use it!*"
            }
            addArtifact(deobfJar) {
                displayName = deobfJar.archiveName.replace(".jar", "")
                changelog = "*This is a file for mod developers. If you don't know what to do with it, don't use it!*"
            }
        }
    }
}
