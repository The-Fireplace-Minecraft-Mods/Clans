buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "Modmuss50"
            url = "http://maven.modmuss50.me/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'ModsIOUpload:ModsIOUpload:+'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'net.cazzar.gradle.modsio'

version = "2.1.4"
group = "the_fireplace.clans"
archivesBaseName = "Clans-1.12.2"

allprojects {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    replace '${version}', project.version
    replace '${fingerprint}', project.findProperty('signSha1')
    mappings = "stable_39"
	
	clientRunArgs += "--uuid=0b1ec5ad-cb2a-43b7-995d-889320eb2e5b --username=The_Fireplace"
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    compile group: "net.shadowfacts", name: "Forgelin", version: "1.8.2", transitive: true
    deobfProvided "us.dynmap:DynmapCoreAPI:3.0-SNAPSHOT"
    deobfProvided "journeymap-api:journeymap-api:1.12:1.4"
    provided ('org.spongepowered:spongeapi:7.1.0') {
        exclude module: 'org.yaml:snakeyaml:1.18'
    }
    provided "com.builtbroken.icbm-classic:ICBM-classic:1.12.2-3.3.0b63"
    compile "appeng:appliedenergistics2:rv6-stable-7:api"
    provided("vazkii.autoreglib:AutoRegLib:1.3-33.34") {
    	transitive = true
    }
    provided "vazkii.quark:Quark:r1.6-177.753"
    //Don't use newer versions of LLibrary unless Ice and Fire updates to use them.
    deobfCompile("net.ilexiconn:llibrary:1.7.9-1.12.2") {
    	transitive = true
    }
    shade 'com.electronwill.night-config:hocon:3.6.0'
}

repositories {
    jcenter()
    //Night-Config, probably others
    mavenCentral()
    // Sponge
    maven { url 'https://repo.spongepowered.org/maven' }
    // Forgelin
	maven { url "http://maven.shadowfacts.net/" }
	// Dynmap
    maven { url "http://repo.mikeprimm.com" }
    // iChunUtil, JourneyMap API, Chisels & Bits
    maven { url "https://minecraft.curseforge.com/api/maven/" }
    // ICBM, MFFS
    maven { url = "http://api.dmodoomsirius.me/" }
    // Quark, AutoRegLib
    maven { url = "http://maven.blamejared.com/" }
    // LLibrary (needed for Ice and Fire)
    maven { url "https://maven.mcmoddev.com/" }
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    // Skips if the keyStore property is missing.
    onlyIf {
        project.hasProperty('keyStore')
    }

    // findProperty allows us to reference the property without it existing.
    // Using project.propName would cause the script to fail validation if
    // the property did not exist.
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')

    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar

artifacts {
    archives jar
    archives deobfJar
    archives sourceJar
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.RSA'
            exclude 'META-INF/*.MF'

            exclude '**/*.html'
        }
    }
}

curseforge {
  apiKey = project.hasProperty("curseForgeApiKey")? project.curseForgeApiKey : "empty"
  project {
    id = '313915'
    changelog = file('changelog.txt')
    releaseType = 'beta'
    addGameVersion '1.12.2'
    addGameVersion '1.12.1'
    addGameVersion '1.12'
	addGameVersion 'Java 8'
    mainArtifact(jar) {
        displayName = jar.archiveName.replace(".jar", "")
        relations{
            optionalLibrary 'grand-economy'
            optionalLibrary 'dynmapforge'
            optionalLibrary 'chat-censor'
        }
    }
    addArtifact(sourceJar) {
        displayName = sourceJar.archiveName.replace(".jar", "")
        changelog = "*This is a file for mod developers. If you don't know what to do with it, don't use it!*"
    }
    addArtifact(deobfJar) {
        displayName = deobfJar.archiveName.replace(".jar", "")
        changelog = "*This is a file for mod developers. If you don't know what to do with it, don't use it!*"
    }
  }
}

modsIO {
    key = project.hasProperty("modsioApiKey")? project.modsioApiKey : "empty"
    project{
		artifact = new File(jar.destinationDir, archivesBaseName+"-"+version+".jar")
		modid = "1280"
		minecraft = "1.12.2"
		try{changelog = file('changelog.txt').text}catch(Exception ignored){changelog=""}
		tag = ""
		current = true
    }
}
